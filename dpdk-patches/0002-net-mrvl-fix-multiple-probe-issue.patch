From 4798b37a0933871c03fff46539108524325ad4f7 Mon Sep 17 00:00:00 2001
From: nsamsono <nsamsono@marvell.com>
Date: Tue, 24 Oct 2017 21:26:14 +0300
Subject: [PATCH 2/5] net: mrvl: fix multiple probe issue

Change-Id: Ifa49acd4f9a7cf489be2015f2e5fd19b89f425bf
Signed-off-by: nsamsono <nsamsono@marvell.com>
---
 drivers/net/mrvl/mrvl_ethdev.c | 68 ++++++++++++++++++++++++++++--------------
 1 file changed, 45 insertions(+), 23 deletions(-)

diff --git a/drivers/net/mrvl/mrvl_ethdev.c b/drivers/net/mrvl/mrvl_ethdev.c
index e184b4c..ec7a31e 100644
--- a/drivers/net/mrvl/mrvl_ethdev.c
+++ b/drivers/net/mrvl/mrvl_ethdev.c
@@ -159,6 +159,8 @@ struct mrvl_txq {
 int mrvl_lcore_first;
 int mrvl_lcore_last;
 
+int mrvl_dev_num;
+
 
 static inline int
 mrvl_get_bpool_size(int	pp2_id, int pool_id)
@@ -1660,6 +1662,8 @@ static void mrvl_txq_info_get(struct rte_eth_dev *dev, uint16_t tx_queue_id,
 
 	eth_dev->rx_pkt_burst = mrvl_rx_pkt_burst;
 	eth_dev->tx_pkt_burst = mrvl_tx_pkt_burst;
+	eth_dev->data->dev_flags |= RTE_ETH_DEV_DETACHABLE;
+	eth_dev->data->kdrv = RTE_KDRV_NONE;
 	eth_dev->data->drv_name = drv_name;
 	eth_dev->data->dev_private = priv;
 	eth_dev->dev_ops = &mrvl_ops;
@@ -1737,6 +1741,7 @@ static void mrvl_txq_info_get(struct rte_eth_dev *dev, uint16_t tx_queue_id,
 		if (hifs[i])
 			pp2_hif_deinit(hifs[i]);
 	}
+	used_hifs = MRVL_MUSDK_HIFS_RESERVED;
 }
 
 static void mrvl_set_first_last_cores(int core_id)
@@ -1774,9 +1779,11 @@ static void mrvl_set_first_last_cores(int core_id)
 	if (ifnum > RTE_DIM(ifnames))
 		goto out_free_kvlist;
 
+	mrvl_ports_nb = 0;
 	rte_kvargs_process(kvlist, MRVL_IFACE_NAME_ARG,
 			   mrvl_get_ifnames, &ifnames);
 
+/* TODO:  Get protection for multiple calls */
 	cfgnum = rte_kvargs_count(kvlist, MRVL_CFG_ARG);
 	if (cfgnum > 1) {
 		RTE_LOG(ERR, PMD, "Cannot handle more than one config file!\n");
@@ -1785,23 +1792,28 @@ static void mrvl_set_first_last_cores(int core_id)
 		rte_kvargs_process(kvlist, MRVL_CFG_ARG,
 				mrvl_get_qoscfg, &mrvl_qos_cfg);
 
-	/*
-	 * ret == -EEXIST is correct, it means DMA
-	 * has been already initialized (by another PMD).
-	 */
-	ret = mv_sys_dma_mem_init(RTE_MRVL_MUSDK_DMA_MEMSIZE);
-	if ((ret < 0) && (ret != -EEXIST))
-		goto out_free_kvlist;
+	if (mrvl_dev_num == 0) {
+		RTE_LOG(INFO, PMD,
+			"rte_pmd_mrvl_probe: Perform MUSDK initializations\n");
 
-	ret = mrvl_init_pp2();
-	if (ret) {
-		RTE_LOG(ERR, PMD, "Failed to init PP!\n");
-		goto out_deinit_dma;
-	}
+		/*
+		 * ret == -EEXIST is correct, it means DMA
+		 * has been already initialized (by another PMD).
+		 */
+		ret = mv_sys_dma_mem_init(RTE_MRVL_MUSDK_DMA_MEMSIZE);
+		if ((ret < 0) && (ret != -EEXIST))
+			goto out_free_kvlist;
 
-	ret = mrvl_init_hifs();
-	if (ret)
-		goto out_deinit_hifs;
+		ret = mrvl_init_pp2();
+		if (ret) {
+			RTE_LOG(ERR, PMD, "Failed to init PP!\n");
+			goto out_deinit_dma;
+		}
+
+		ret = mrvl_init_hifs();
+		if (ret)
+			goto out_deinit_hifs;
+	}
 
 	for (i = 0; i < ifnum; i++) {
 		RTE_LOG(INFO, PMD, "Creating %s\n", ifnames[i]);
@@ -1809,6 +1821,7 @@ static void mrvl_set_first_last_cores(int core_id)
 		if (ret)
 			goto out_cleanup;
 	}
+	mrvl_dev_num += ifnum;
 
 	rte_kvargs_free(kvlist);
 
@@ -1826,10 +1839,13 @@ static void mrvl_set_first_last_cores(int core_id)
 	for (; i > 0; i--)
 		mrvl_eth_dev_destroy(ifnames[i]);
 out_deinit_hifs:
-	mrvl_deinit_hifs();
-	mrvl_deinit_pp2();
+	if (mrvl_dev_num == 0) {
+		mrvl_deinit_hifs();
+		mrvl_deinit_pp2();
+	}
 out_deinit_dma:
-	mv_sys_dma_mem_destroy();
+	if (mrvl_dev_num == 0)
+		mv_sys_dma_mem_destroy();
 out_free_kvlist:
 	rte_kvargs_free(kvlist);
 
@@ -1842,22 +1858,28 @@ static void mrvl_set_first_last_cores(int core_id)
 	int i;
 	const char *name;
 
+	RTE_LOG(INFO, PMD, "rte_pmd_mrvl_remove: removing %s\n",
+		vdev->device.name);
+
 	name = rte_vdev_device_name(vdev);
 	if (!name)
 		return -EINVAL;
 
-	RTE_LOG(INFO, PMD, "Removing %s\n", name);
-
 	for (i = 0; i < rte_eth_dev_count(); i++) {
 		char ifname[RTE_ETH_NAME_MAX_LEN];
 
 		rte_eth_dev_get_name_by_port(i, ifname);
 		mrvl_eth_dev_destroy(ifname);
+		mrvl_dev_num--;
 	}
 
-	mrvl_deinit_hifs();
-	mrvl_deinit_pp2();
-	mv_sys_dma_mem_destroy();
+	if (mrvl_dev_num == 0) {
+		RTE_LOG(INFO, PMD,
+			"rte_pmd_mrvl_remove: Perform MUSDK deinit\n");
+		mrvl_deinit_hifs();
+		mrvl_deinit_pp2();
+		mv_sys_dma_mem_destroy();
+	}
 
 	return 0;
 }
-- 
1.9.1

