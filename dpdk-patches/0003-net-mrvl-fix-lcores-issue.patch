From 4e5b28784f7213452cbd059e4c90833abbcbf8b3 Mon Sep 17 00:00:00 2001
From: nsamsono <nsamsono@marvell.com>
Date: Wed, 25 Oct 2017 20:00:02 +0300
Subject: [PATCH 3/5] net/mrvl: fix lcores issue

Change-Id: Ic70da333badd7855dc848d88657cdf13fb2cb6d2
Signed-off-by: nsamsono <nsamsono@marvell.com>
---
 drivers/net/mrvl/mrvl_ethdev.c | 25 ++++++++++++++++++++-----
 1 file changed, 20 insertions(+), 5 deletions(-)

diff --git a/drivers/net/mrvl/mrvl_ethdev.c b/drivers/net/mrvl/mrvl_ethdev.c
index ec7a31e..d1633ba 100644
--- a/drivers/net/mrvl/mrvl_ethdev.c
+++ b/drivers/net/mrvl/mrvl_ethdev.c
@@ -642,6 +642,10 @@ struct mrvl_txq {
 	struct mrvl_priv *priv = dev->data->dev_private;
 	uint32_t num;
 	int ret;
+	unsigned int core_id = rte_lcore_id();
+
+	if (core_id == LCORE_ID_ANY)
+		core_id = 0;
 
 	ret = pp2_bpool_get_num_buffs(priv->bpool, &num);
 	if (ret) {
@@ -653,7 +657,7 @@ struct mrvl_txq {
 		struct pp2_buff_inf inf;
 		uint64_t addr;
 
-		ret = pp2_bpool_get_buff(hifs[rte_lcore_id()], priv->bpool, &inf);
+		ret = pp2_bpool_get_buff(hifs[core_id], priv->bpool, &inf);
 		if (ret)
 			break;
 
@@ -950,9 +954,16 @@ static void mrvl_txq_info_get(struct rte_eth_dev *dev, uint16_t tx_queue_id,
 	struct buff_release_entry entries[MRVL_PP2_TXD_MAX];
 	struct rte_mbuf *mbufs[MRVL_PP2_TXD_MAX];
 	int i, ret;
-	unsigned core_id = rte_lcore_id();
-	struct pp2_hif *hif = hifs[core_id];
-	struct pp2_bpool *bpool = rxq->priv->bpool;
+	unsigned int core_id;
+	struct pp2_hif *hif;
+	struct pp2_bpool *bpool;
+	core_id = rte_lcore_id();
+
+	if (core_id == LCORE_ID_ANY)
+		core_id = 0;
+
+	hif = hifs[core_id];
+	bpool = rxq->priv->bpool;
 
 	ret = rte_pktmbuf_alloc_bulk(rxq->mp, mbufs, num);
 	if (ret)
@@ -1052,6 +1063,10 @@ static void mrvl_txq_info_get(struct rte_eth_dev *dev, uint16_t tx_queue_id,
 {
 	struct mrvl_rxq *q = rxq;
 	int i, num;
+	unsigned int core_id = rte_lcore_id();
+
+	if (core_id == LCORE_ID_ANY)
+		core_id = 0;
 
 	if (!q)
 		return;
@@ -1063,7 +1078,7 @@ static void mrvl_txq_info_get(struct rte_eth_dev *dev, uint16_t tx_queue_id,
 		struct pp2_buff_inf inf;
 		uint64_t addr;
 
-		pp2_bpool_get_buff(hifs[rte_lcore_id()], q->priv->bpool, &inf);
+		pp2_bpool_get_buff(hifs[core_id], q->priv->bpool, &inf);
 		addr = cookie_addr_high | inf.cookie;
 		rte_pktmbuf_free((struct rte_mbuf *)addr);
 	}
-- 
1.9.1

